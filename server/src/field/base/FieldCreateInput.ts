/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { EnumFieldFieldType } from "./EnumFieldFieldType";
import { IsEnum, IsString, IsOptional, ValidateNested } from "class-validator";
import { Field } from "./Field";
import { SectionToFieldCreateNestedManyWithoutFieldsInput } from "./SectionToFieldCreateNestedManyWithoutFieldsInput";
import { Type } from "class-transformer";
import { EnumFieldValidationType } from "./EnumFieldValidationType";
@InputType()
class FieldCreateInput {
  @ApiProperty({
    required: true,
    enum: EnumFieldFieldType,
  })
  @IsEnum(EnumFieldFieldType)
  @Field(() => EnumFieldFieldType)
  fieldType!: "SingleLineText" | "Number" | "MultiLineText";

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  fieldValue?: string | null;

  @ApiProperty({
    required: false,
    type: () => SectionToFieldCreateNestedManyWithoutFieldsInput,
  })
  @ValidateNested()
  @Type(() => SectionToFieldCreateNestedManyWithoutFieldsInput)
  @IsOptional()
  @Field(() => SectionToFieldCreateNestedManyWithoutFieldsInput, {
    nullable: true,
  })
  sectionToFields?: SectionToFieldCreateNestedManyWithoutFieldsInput;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  title!: string;

  @ApiProperty({
    required: false,
    enum: EnumFieldValidationType,
  })
  @IsEnum(EnumFieldValidationType)
  @IsOptional()
  @Field(() => EnumFieldValidationType, {
    nullable: true,
  })
  validationType?: "Email" | "Web" | "Number" | null;
}
export { FieldCreateInput };

/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IntFilter } from "../../util/IntFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested, IsEnum } from "class-validator";
import { Field } from "../../field/base/Field";
import { CvWhereUniqueInput } from "../../cv/base/CvWhereUniqueInput";
import { StringFilter } from "../../util/StringFilter";
import { SectionToFieldListRelationFilter } from "../../sectionToField/base/SectionToFieldListRelationFilter";
import { EnumSectionSectionType } from "./EnumSectionSectionType";
import { StringNullableFilter } from "../../util/StringNullableFilter";
@InputType()
class SectionWhereInput {
  @ApiProperty({
    required: false,
    type: IntFilter,
  })
  @Type(() => IntFilter)
  @IsOptional()
  @Field(() => IntFilter, {
    nullable: true,
  })
  columnCount?: IntFilter;

  @ApiProperty({
    required: false,
    type: () => CvWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CvWhereUniqueInput)
  @IsOptional()
  @Field(() => CvWhereUniqueInput, {
    nullable: true,
  })
  cv?: CvWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => SectionToFieldListRelationFilter,
  })
  @ValidateNested()
  @Type(() => SectionToFieldListRelationFilter)
  @IsOptional()
  @Field(() => SectionToFieldListRelationFilter, {
    nullable: true,
  })
  sectionToFields?: SectionToFieldListRelationFilter;

  @ApiProperty({
    required: false,
    enum: EnumSectionSectionType,
  })
  @IsEnum(EnumSectionSectionType)
  @IsOptional()
  @Field(() => EnumSectionSectionType, {
    nullable: true,
  })
  sectionType?:
    | "Simple"
    | "TwoFields"
    | "ThreeFields"
    | "FourFields"
    | "FiveFields";

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  title?: StringNullableFilter;
}
export { SectionWhereInput };

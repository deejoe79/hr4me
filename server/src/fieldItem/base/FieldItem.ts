/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsDate,
  IsEnum,
  IsString,
  IsOptional,
  ValidateNested,
} from "class-validator";
import { Type } from "class-transformer";
import { EnumFieldItemFieldType } from "./EnumFieldItemFieldType";
import { SectionToField } from "../../sectionToField/base/SectionToField";
import { EnumFieldItemValidationType } from "./EnumFieldItemValidationType";
@ObjectType()
class FieldItem {
  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: true,
    enum: EnumFieldItemFieldType,
  })
  @IsEnum(EnumFieldItemFieldType)
  @Field(() => EnumFieldItemFieldType, {
    nullable: true,
  })
  fieldType?: "SingleLineText" | "Number" | "MultiLineText";

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  fieldValue!: string | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
    type: () => [SectionToField],
  })
  @ValidateNested()
  @Type(() => SectionToField)
  @IsOptional()
  sectionToFields?: Array<SectionToField>;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  title!: string;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;

  @ApiProperty({
    required: false,
    enum: EnumFieldItemValidationType,
  })
  @IsEnum(EnumFieldItemValidationType)
  @IsOptional()
  @Field(() => EnumFieldItemValidationType, {
    nullable: true,
  })
  validationType?: "Email" | "Web" | "Number" | null;
}
export { FieldItem };
